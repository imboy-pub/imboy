[
    {imboy, [
        % http服务端口
        {http_port, 9800}
        , {http_port_adm, 9806}
        %, {host, <<"local.imboy.pub">>}
        , {host, '_'}
        % start_mode 包含的值 quic | tls | http
        , {start_mode, tls}
        %, {cacertfile, "/ssl/dev.imboy.pub_chain.csr"}
        %, {certfile, "/ssl/dev.imboy.pub_public.crt"}
        %, {keyfile, "/ssl/dev.imboy.pub.key"}
        , {cacertfile, "/ssl/chain.csr"}
        , {certfile, "/ssl/public.crt"}
        , {keyfile, "/ssl/server.key"}
        , {base_url, <<"https://dev.imboy.pub">>}

        , {hashids_salt, "cVQtrKNa"}
        % 用于postgresql 存储数据的AES密钥 Key binary 32
        , {postgre_aes_key, <<>>}

        % 百度千帆大模型相关配置
        , {qianfan, #{
            app_id => 53511846, api_key => <<>>
            , secret_key => <<>>
            , auth_access_key => <<>>
            , auth_secret_key => <<>>
        }}

        ,  {guanco, [
           {ollama_api_url, "http://localhost:11434"},
           {pool_size, 5},
           {max_overflow, 10}
         ]}

        % smtp 配置参考 https://github.com/gen-smtp/gen_smtp
        , {smtp_option, [
            {relay, "smtp.qq.com"}
            , {ssl, true}
            , {auth,always}
            , {trace_fun, fun io:format/2}
            , {username, ""}
            , {password, ""}
        ]}

        , {sms, [
            {switch, <<"off">>}
            , {default_code, <<"6666">>}
            , {platform, <<"aliyun">>}
            , {<<"aliyun">>, [
                {sign_name, <<"xxx"/utf8>>}
                , {template_code, <<"">>}
                , {key_id, <<"">>}
                , {key_secret, <<"">>}
                , {region_id, <<"cn-shenzhen">>}
            ]}
        ]}

        , {sql_driver, pgsql}
        , {pg_conf
            , #{name => pgsql,
                max_count => 80,
                init_count => 5,
                start_mfa => {
                    epgsql
                    , connect
                    , [
                        #{
                            host => "localhost"
                            , username => "imboy_user"
                            , password => "123456"
                            , database => "imboy_v1"
                            , port => 5432
                            , ssl => false
                            , timeout => 4000
                            ,  codecs => [{epgsql_codec_rfc3339_bin, []}]
                        }
                    ]
                }
            }
        }
        %% 能够创建表删除表的超级数据库用户
        , {super_account, #{
            host => "localhost"
            , username => "imboy_user"
            , password => "123456"
            , database => "imboy_v1"
            , port => 5432
            , ssl => false
            , timeout => 4000
        }}
        , {scripts_path, "./doc/postgresql/migrations"}

        %% Depcache settings,
        , {depcache, [
            % maximum size in mbs
            {depcache_memory_max, 100}
        ]}

        , {crontab_jobs, [
            %% {JobName, CrontabSpec, {M, F, A}}
            %% {JobName, CrontabSpec, {M, F, A}, StartDateTime, EndDateTime}
            %% CrontabSpec
            %%  1. "Minute Hour DayOfMonth Month DayOfWeek"
            %%  2. "Second Minute Hour DayOfMonth Month DayOfWeek"
            %%  3. @yearly | @annually | @monthly | @weekly | @daily | @midnight | @hourly | @minutely
            %%  4. @every 1h2m3s

            %% Standard crontab spec without second (default second is 0 not *).
            {crontab_job, "*/15 * * * *", {demo_cron_logic, inspect, ["Runs on 0, 15, 30, 45 minutes"]}},
            %% Extend crontab spec with second.
            {extend_crontab_job, "0 0 1-6/2,18 * * *", {demo_cron_logic, inspect, ["Runs on 1,3,6,18 o'clock"]}},
            %% Crontab spec with alphabet.
            {alphabet_job, "@hourly", {demo_cron_logic, inspect, ["Runs every(0-23) o'clock"]}},
            %% Fixed interval spec.
            {fixed_interval_job, "@every 5m", {demo_cron_logic, inspect, ["Runs every 5 minutes"]}},
            %% Job with startDateTime and EndDateTime. Runs 0-23 o'clock since {11,0,0}.
            {limit_datetime_job, "@hourly", {demo_cron_logic, inspect, ["Runs every(0-23) o'clock"]}, {11, 0, 0}, unlimited},
            %% Job with max run count, default is `unlimited`
            {max_run_count_job, "@daily", {demo_cron_logic, inspect, ["Runs daily"]}, unlimited, unlimited, [{max_count, 1000}]},
            %% Parallel job, singleton default is true.
            {no_singleton_job, "@minutely", {timer, sleep, [61000]}, unlimited, unlimited, [{singleton, false}]}
        ]}
    ]}

    , {throttle, [
        {rates, [
            {refreshtoken, 11, per_minute}
            , {refreshtoken, 5, per_second}
            , {throttle_ws, 22, per_minute}
            , {throttle_ws, 10, per_second}
            , {three_second_once, 1, 3000} % 3 秒 1次
            , {per_hour_once, 1, per_hour}
            , {per_minute_once, 1, per_minute}
        ]}
    ]}

    %% Lager Bein %%%
    , {sasl, [
        {utc_log, true},
        {sasl_error_logger, {file, "log/sasl-error.log"}},
        {errlog_type, error},
        {error_logger_mf_dir, "log/sasl"},      % Log directory
        {error_logger_mf_maxbytes, 104857600},   % 100 MB max file size
        {error_logger_mf_maxfiles, 255}           % 255 files max
    ]}

    , {lager, [
        {log_root, "./log"}
        %% What handlers to install with what arguments
        , {handlers, [
            {lager_console_backend, [{level, debug},{level, debug},{formatter, lager_default_formatter},
                {formatter_config, [color, date," ",time, " [", severity, "] ", node,"#",pid, " ", message, "1",sev, "1","\n"]}]}
            , {lager_file_backend, [
                {file, "error.log"}, {level, error}, {size, 10485760}, {date, "$D0"}, {count, 999}]
            }
            , {lager_file_backend, [
                {file, "debug.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 999}]
            }
        ]}
        , {colored,true}
        , {colors, [
            {debug,     "\e[0:38m" },
            {info,      "\e[1;32m" },
            {notice,    "\e[1;36m" },
            {warning,   "\e[1;33m" },
            {error,     "\e[1;31m" },
            {critical,  "\e[1;35m" },
            {alert,     "\e[1;44m" },
            {emergency, "\e[1;41m" }
        ]}
    ]}
    %% Lager End %%%

    , {ecron, [
        {time_zone, local}, %% local or utc
        {global_quorum_size, 1},
        {global_jobs, [
            % 6个星号分别表示 秒，分钟、小时、日、月、周几
            {global_crontab_job, "*/1 * * * * *", {demo_cron_logic, inspect, ["Runs on 0, 15, 30, 45 seconds"]}}
        ]}
    ]}

    , {kernel, [
        {start_timer, true}
        , {logger_level, all}
    ]}
].
